1) Get by RobotID all the tasks entities that have a relationship "owns" 
MATCH (x: ROBOT{ID: 'ROBOT_1'})MATCH (y: TASK)WHERE (x)-[: OWNS]->(y) RETURN (y)
2) Get by EntityID (robot,edge,cloud) all the other entities that have a can_reach relationship 
RESOURCE_PLANNER" "MATCH (x: ROBOT{ID: 'ROBOT_1'})MATCH (y)WHERE (x)-[: CAN_REACH]->(y) RETURN (y)
RESOURCE_PLANNER" "MATCH (x: EDGE{ID: EDGE _1'})MATCH (y)WHERE (x)-[: CAN_REACH]->(y) RETURN (y)
RESOURCE_PLANNER" "MATCH (x: CLOUD{ID: CLOUD _1'})MATCH (y)WHERE (x)-[: CAN_REACH]->(y) RETURN (y)
3) Get me all the instances that are currently deployed by a particular image 
MATCH (x: IMAGE{ID: 'IMAGE_1'})MATCH (y: INSTANCE)WHERE (x)-[: INSTANCIATED]->(y) RETURN (y)
4) Get all the actions that belong to a Task 
MATCH (x: TASK{ID: 'TASK_1'})MATCH (y: ACTION)WHERE (x)-[: EXTENDS]->(y) RETURN (y)
5)Get all the edge that is providing right now
MATCH (x)MATCH (y: ACTION)WHERE (x)-[: PROVIDES]->(y) RETURN (x)
6) Give me all the instance currently deployed in the edge or cloud
MATCH (x: EDGE{ID: 'EDGE_1'})MATCH (y: INSTANCE)WHERE (y)-[: LOCATED_AT]->(x) RETURN (y)
MATCH (x: CLOUD{ID: 'CLOUD_1'})MATCH (y: INSTANCE)WHERE (y)-[: LOCATED_AT]->(x) RETURN (y)
7) Give me the image that is required to execute action_id
MATCH (x: ACTION{ID: 'ACTION_1'})MATCH (y: IMAGE)WHERE (x)-[: NEEDS]->(y) RETURN (y)
8) Give me all the machines that are working for robot_id
MATCH (x)MATCH (y:ACTION)WHERE (x)-[:PROVIDES{ WORKING_FOR: 'ROBOT_1'}]->(y) RETURN (x)
9) Give me all the tasks that are been executed by a robot_id.
MATCH (x)MATCH (y:ACTION)MATCH (z:TASK) WHERE (x)-[:PROVIDES{ WORKING_FOR: 'ROBOT_1'}]->(y) AND (z)-[:EXTENDS]->(y) RETURN (z)
10) Give me all the instances located at actor_id
MATCH (x:INSTANCE)MATCH (y:EDGE{ID:'EDGE_1'})WHERE (x)-[:LOCATED_AT]->(y) RETURN (x)
MATCH (x:INSTANCE)MATCH (y:CLOUD{ID:'CLOUD_1'})WHERE (x)-[:LOCATED_AT]->(y) RETURN (x)
11) Return the amount of instances deployed per edge/cloud
MATCH (x:INSTANCE)MATCH (y)WHERE (x)-[:LOCATED_AT]->(y) RETURN count(x),y
